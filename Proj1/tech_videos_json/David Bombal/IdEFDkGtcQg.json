{
    "video_id": "IdEFDkGtcQg",
    "title": "Free Wireshark and Ethical Hacking Course: Video #3",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2020-08-21T14:00:05Z",
    "video_url": "https://www.youtube.com/watch?v=IdEFDkGtcQg",
    "category": "Science & Technology",
    "tags": [
        "ethical hacking",
        "hacking",
        "cyber security",
        "wireshark",
        "wireshark tutorial 2020",
        "ethical hacker",
        "wireshark tutorial for beginners",
        "wireshark download",
        "wireshark 2020",
        "networking",
        "how to hack",
        "wireshark filters",
        "wireshark tutorial",
        "how to use wireshark",
        "gns3 wireshark",
        "http",
        "packets",
        "sniffing",
        "how to",
        "packet analyzer",
        "kali linux",
        "hacker",
        "ethical hacking course",
        "hackers",
        "udemy wireshark",
        "packet sniffing",
        "learn hacking",
        "tutorial",
        "kali linux tutorial",
        "hacking course",
        "wireshark hacking"
    ],
    "views": 20300,
    "likes": 664,
    "comments_count": 42,
    "description": "You need to span or mirror Ethernet ports on switches to be able to capture packets. Otherwise unicast frames sent to know MAC addresses in your network will not be sent to your Wireshark monitoring station.\nGet the full Wireshark course for $9: https://bit.ly/wireshark9\nJoin my Discord here: http://discord.davidbombal.com\nðŸ‘ŠðŸ‘ŠðŸ‘Šsupport the mission, join thisisIT: https://bit.ly/thisisitwireshark\nCCNA for $10: https://bit.ly/ccnafor10\n\nPrevious video in this series: https://bit.ly/wiresharkhacking\n\nMake sure you know where to capture packets or frames in a network. Do you know how devices such as hubs, switches and routers treat traffic? Do you know what port span is?\n\nIn this course I'm going to show you how to capture packets from a network, how to capture passwords, replay voice conversations, view routing protocol updates and many more options.\n\nDo you know network protocols? Do you know how to hack? Want to learn wireshark and have some fun with Ethical hacking? This is the course for you: \n\nLearn Wireshark practically. Wireshark pcapng files provided so you can practice while you learn! There is so much to learn in this course:\n\n- Capture Telnet, FTP, TFTP, HTTP passwords.\n- Replay VoIP conversations.\n- Capture routing protocol (OSPF) authentication passwords.\n- Troubleshoot network issues.\n- Free software.\n- Free downloadable pcapng files.\n- Answer quiz questions.\n\nThe course is very practical. You can practice while you learn!\n\nLearn how to analyze and interpret network protocols and leverage Wireshark for what it was originally intended: Deep Packet Inspection and network analysis.\n\nProtocols we capture and discuss in this course include:\n- Telnet\n- FTP\n- TFTP\n- HTTP\n- VoIP\n- OSPF\n- EIGRP\n- DNS\n- ICMP\n\nMenu:\nOverview: 0:00\nAdd monitoring station: 0:45\nStart capturing traffic: 1:25\nSpan / mirror port on switch: 1:58\nProve that capturing is working: 2:51\nBrowser caching: 4:28\nSummary: 5:19\nThank you to my supporters: 6:25\n\npcap file used in the video: http://bit.ly/sharkpcap3\nWireshark playlist: https://bit.ly/wiresharkhacking\n\n======================\nSpecial Offers:\n======================\nCisco Press: Up to 50% discount\nSave every day on Cisco Press learning products! Use discount code BOMBAL during checkout to save 35% on print books (plus free shipping in the U.S.), 45% on eBooks, and 50% on video courses and simulator software. Offer expires December 31, 2020. Shop now. \nLink: bit.ly/ciscopress50\n\nITPro.TV:\nhttps://itpro.tv/davidbombal\n30% discount off all plans Code: DAVIDBOMBAL \n\nBoson software: 15% discount\nLink: https://bit.ly/boson15\nCode: DBAF15P\n\nGNS3 Academy:\nCCNA ($10): https://bit.ly/gns3ccna10\nWireshark ($10): https://bit.ly/gns3wireshark\n\nDavidBombal.com\nCCNA ($10): http://bit.ly/yt999ccna\nWireshark ($9): https://bit.ly/wireshark9\n\nWho this course is for:\nNetwork Engineers\nNetwork Architects\nEthical hackers\nNetworking Students\n\nWireshark\nwireshark download \nwireshark tutorial 2020 \nwireshark tutorial for beginners \nwireshark 2020 \npacket sniffing\nethical hacking\nhacking\n\nPlease note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel! \n\n#Wireshark #Hacking #CCNA",
    "description_links": [
        "https://bit.ly/wireshark9",
        "http://discord.davidbombal.com",
        "https://bit.ly/thisisitwireshark",
        "https://bit.ly/ccnafor10",
        "https://bit.ly/wiresharkhacking",
        "http://bit.ly/sharkpcap3",
        "https://bit.ly/wiresharkhacking",
        "https://itpro.tv/davidbombal",
        "https://bit.ly/boson15",
        "https://bit.ly/gns3ccna10",
        "https://bit.ly/gns3wireshark",
        "http://bit.ly/yt999ccna",
        "https://bit.ly/wireshark9"
    ],
    "transcript": "- This video is part of my Wireshark packet analysis and ethical hacking course, have a look at this playlist to see all the videos in this course. In this video, I'm gonna show you how to capture packets in a switched network. You need to be careful when using switches, you won't see traffic to known Mac addresses. In other words, unicast traffic, to known Mac addresses won't be captured because the switch will only forward that traffic out of specific ports, not to your monitoring station. So you need to SPAN the port or introduce a network tap, or a hub to be able to capture traffic. Okay, let's get started. (upbeat music) So in this genus three typology, I'm gonna add a device that will allow me to capture traffic basically as if I had a monitoring station in my network. So let's pretend this Ubuntu PC is our monitoring device. I'm not actually gonna use that for monitoring, I'm gonna use genus three to do it directly, but let's pretend you were running. Wireshark on this Ubuntu PC. I could, as an example, use a windows PC here rather than Ubuntu, but I'm gonna simply capture the traffic this way. So again, if I start capturing on this link, will I see the HTTP traffic from the PC to the server or full to HTTP here? Nothing at the moment, on the client, I'll refresh this page, don't see anything, manually type it in. Don't see anything, shut that down, open it up again, try and connect to the server. We don't see any HTTP traffic on this link, but what I'm gonna do now is SPAN or mirror the port on the switch. So on switch one, I'm gonna go into global configuration mode, I'm gonna type monitor. This goes by different terms. It's known as SPAN or monitor or mirroring. We're gonna use the term monitor here, so I'm gonna monitor a session, I'm going to give it a number one. I'm gonna specify the source interface as gigabit 0/0. So this interface is gonna be the source. And then I'm gonna say monitor session 1 the destination interface is gigabit 0/3. So source interface, destination interface. The switch is gonna copy all traffic from this interface to this interface. So let's prove that. This is the Wireshark capture from gigabit 0/3 to the Ubuntu host. In other words, over here on the client, refresh the page. Notice I suddenly see HTTP traffic, refresh the page again, I see more HTTP traffic. So because I'm spanning the port, I can see the HTTP traffic. So if I had a monitoring station here, so I was running a windows computer, or some other computer with Wireshark directly on it, I'd need to SPAN the port like I've done here to be able to see the traffic. Again, network vendors use different terms, mirroring, monitoring, SPAN, but notice show monitor session and let's say session 1. You can see that we are capturing traffic in both directions on this port and the destination port is gigabit 0/3, encapsulation is native, we're not adding any additional frames to the captures. So you'll actually see the original frames here notice source Mac address PC going to the server source IP address of PC to the server. So frame, packet, segment, random port number going to port 80, and you can see the actual request made there. So if we look at the server response, we can see for instance, the png file, notice nothing was modified. So with a browser, it often caches the data locally, so it doesn't re-request all the data to save on bandwidth. But if I shut that browser down, open it up again and go to the server and I'll go right down. Again, we see not modified. So let's actually do this. I'm gonna open up a private window and go to the server that way to force it to do everything again. So here we go, client request. Here's the reply from the server and notice you can see all the data from the server. So you can see title of the webpage, you can see the actual text in the webpage. So in summary, be careful of way you capture traffic. In this example, we wouldn't see the traffic on this link or on this link, unless we enabled port monitoring or SPAN the port. In other words, you need to get the switch to copy frames from this interface out of this interface. It wouldn't normally do that if traffic was going from the client to the server, you have to enable the mirroring of traffic to be able to see it on a switch. With a hub, you wouldn't have to do that. A hub floods traffic out of all ports but a switch doesn't. So once again, don't forget you need to be careful where you monitoring traffic if you want to see what's going on. As an example, if you wanna see what's going on on this side of the network, you wanna put a probe or some device on that part of the network so that you can see what's going on. You could implement remote SPAN, where you copy traffic through a tunnel from one side of the network to another, but you need to be careful with that because of overhead and because of the amount of traffic that you're gonna be receiving. So we'd be better to capture traffic locally, if you can. (upbeat music)",
    "transcript_keywords": [
        "traffic",
        "HTTP traffic",
        "SPAN",
        "port",
        "server",
        "HTTP",
        "capture traffic",
        "interface",
        "monitoring",
        "Wireshark packet analysis",
        "capture",
        "network",
        "Ubuntu",
        "switch",
        "Mac",
        "Mac addresses",
        "monitor",
        "Wireshark",
        "analysis and ethical",
        "ethical hacking"
    ],
    "transcript_entities": [
        [
            "three",
            "CARDINAL"
        ],
        [
            "Mac",
            "PERSON"
        ],
        [
            "Wireshark",
            "PERSON"
        ],
        [
            "SPAN",
            "ORG"
        ],
        [
            "Wireshark",
            "PRODUCT"
        ],
        [
            "Wireshark",
            "ORG"
        ],
        [
            "1",
            "CARDINAL"
        ],
        [
            "80",
            "CARDINAL"
        ]
    ]
}