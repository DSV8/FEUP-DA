{
    "video_id": "CkVvB5woQRM",
    "title": "Free API Hacking course!",
    "channel": "David Bombal",
    "channel_id": "UCP7WmQ_U4GB3K51Od9QvM0w",
    "subscriber_count": 2650000,
    "upload_date": "2022-08-14T14:30:05Z",
    "video_url": "https://www.youtube.com/watch?v=CkVvB5woQRM",
    "category": "Science & Technology",
    "tags": [
        "hacking api",
        "api",
        "api hacking",
        "api hacking tutorial",
        "api hacking bug bounty",
        "api hacking 101",
        "api hacking full course",
        "api hacking tools",
        "api hacking with postman",
        "api hacking for beginners",
        "api hacker",
        "api hacking demo",
        "api hacking kali linux",
        "api hacking course",
        "hacking an api",
        "hack api",
        "owasp api top 10",
        "bug bounty",
        "hacking apis no starch press",
        "hacking api no starch",
        "hacking api book",
        "hacking apis corey ball",
        "corey ball hacking apis",
        "rest api",
        "hacking api with postman"
    ],
    "views": 236990,
    "likes": 9576,
    "comments_count": 273,
    "description": "I interview Corey Ball who wrote the book \"Hacking APIs\" and he tells us about his book and the free training he is making available. This is a cool announcement :)\n\n// MENU //\n00:00 - Why talk about pentesting at all?\n00:21 - Welcome//Corey\n00:48 - What is an API and Why Care?\n01:52 - Free API Hacking Course!\n02:11 - Overview//Course\n02:28 - Do I Need the Book to do the Course?\n02:39 - Pre-reqs for Course\n03:07 - Cert//When?\n03:22 - Hacking APIs//Origin Story\n05:34 - The Start//USPS Data Leak\n07:31 - OWASP Top 10 Explained\n07:49 - API1//Broken Object Level Authorization\n08:46 - Testing for BOLA\n09:59 - API2//Broken User Authentication\n10:35 - Leaked API Keys on GitHub?\n10:59 -  API3//Excessive Data Exposure\n12:05 -  API9//Improper Asset Management\n13:53 - The World is Running on APIs\n14:53 - Who is this Book For?\n16:19 - Set Up Hacking Lab\n17:47 - You Just Need a Laptop to Start Hacking!\n17:52 - Free API Hacking Tools\n20:14 - What is Kiterunner\n20:47 - Gobuster vs Kiterunner \n21:51 - Free Wordlists!\n22:05 - What is fuzzing and free fuzzing tool\n23:17 - More Tools?\n23:47 - How To Find APIs\n25:02 - Using nmap to find APIs?\n26:09 - Hacking APIs as your start in hacking\n28:09 - Difference//REST//GraphQL\n29:07 - Learn REST or GraphQL?\n31:07 - Take a University Course?\n31:44 - Hacking Certifications//Worth It?\n33:42 - Being Hacked//How Corey Started \n36:31 - Corey's OSCP Experience\n38:09 - Hacking APIs As An Alternative Path\n38:41 - Resources to Start With \n39:26 - Ten Years of Experience?\n39:52 - Huge Demand for Hacking APIs\n40:25 - The Course is Completely Free\n40:47- Breaking Barriers!\n41:37 - Thank You & Final Words\n\n// Free API hacking course //\nAPIsec Certified Expert Course: https://university.apisec.ai/\n\n// Defcon Workshop notes //\nhttps://sway.office.com/HVrL2AXUlWGNDHqy\n\n// Books //\nHacking APIâ€™s by Corey J Ball: https://amzn.to/3JOJG0E \nBug Bounty Bootcamp Vickie Li: https://amzn.to/3SPCtBF\n\n// YouTube channels mentioned //\nInsiderPHD: https://www.youtube.com/c/InsiderPhD\nIppSec: https://www.youtube.com/c/ippsec/videos\n\n// Corey SOCIAL //\nLinkedIn: https://www.linkedin.com/in/coreyjball/\nTwitter: https://twitter.com/hAPI_hacker\n\n// David SOCIAL //\nDiscord: https://discord.com/invite/usKSyzb\nTwitter: https://www.twitter.com/davidbombal \nInstagram: https://www.instagram.com/davidbombal \nLinkedIn: https://www.linkedin.com/in/davidbombal \nFacebook: https://www.facebook.com/davidbombal.co \nTikTok: http://tiktok.com/@davidbombal\nYouTube: https://www.youtube.com/davidbombal \n\n// MY STUFF //\nhttps://www.amazon.com/shop/davidbombal\n\n// SPONSORS //\nInterested in sponsoring my videos? Reach out to my team here: sponsors@davidbombal.com\n\nhacking api\napi\napi hacking\napi hacking tutorial\napi hacking bug bounty\napi hacking 101\napi hacking full course\napi hacking tools\napi hacking alissa knight\napi hacking with postman\napi hacking for beginners\napi hacker\napi hacking demo\napi hacking kali linux\napi hacking course\napi hacking insiderphd\nhacking an api\nhack api\nowasp api top 10\nbug bounty\nhacking apis no starch press\nhacking api no starch\nhacking apis pdf\nhacking api book\nhacking apis corey ball\ncorey ball hacking apis\nreverse engineering\nprivate api\napis for beginners\nrest api\nhacking api with postman\nreverse engineering for beginners\nhacking api key\nwhat is an api\nrest apis with postman for absolute beginners\nrest api explained\n\nDisclaimer: This video is for educational purposes only. I own all equipment used for this demonstration. No actual attack took place on any websites.\n\nPlease note that links listed may be affiliate links and provide me with a small percentage/kickback should you use them to purchase any of the items listed or recommended. Thank you for supporting me and this channel! \n\n#api #hack #hacking",
    "description_links": [
        "https://university.apisec.ai/",
        "https://sway.office.com/HVrL2AXUlWGNDHqy",
        "https://amzn.to/3JOJG0E",
        "https://amzn.to/3SPCtBF",
        "https://www.youtube.com/c/InsiderPhD",
        "https://www.youtube.com/c/ippsec/videos",
        "https://www.linkedin.com/in/coreyjball/",
        "https://twitter.com/hAPI_hacker",
        "https://discord.com/invite/usKSyzb",
        "https://www.twitter.com/davidbombal",
        "https://www.instagram.com/davidbombal",
        "https://www.linkedin.com/in/davidbombal",
        "https://www.facebook.com/davidbombal.co",
        "http://tiktok.com/@davidbombal",
        "https://www.youtube.com/davidbombal",
        "https://www.amazon.com/shop/davidbombal"
    ],
    "transcript": "- [David] Broken authentication is the second on the top 10, right? - That's right, they do it just a little better. (chuckles) (David laughs) If 80% of web traffic is API related, it almost feels like why are we talking about network pentesting at all? - There's this alternate path, where the barrier to entry is not so high, but the demand is very high. (pop instrumental music) Hey everyone, it's David Bombal, back with a very special guest. He's the author of this book, \"Hacking APIs\". Corey, welcome. - Hey David, thanks for having me on. Is it a space guy on a ship running away from a star? - In my mind, there are a handful of things going together into that image, which is the Death Star has this hulking infrastructure. Defensive, can destroy planets, it can do all these things, but it has this one thermal exhaust support that can lead to its ultimate demise. - So let's start with the very basics. What is an API and why do we care? - An API is an application programming interface. It's the common language that allows applications to work together in. Historically, when you're trying to go after the crown jewels of an organization, which is typically their data, you have to find a way into that network. Once you get into that, then you have to get past their firewall. Then you have to find a landing point within the network where you can pivot around, maybe get domain admin and locate the data and ex-filtrate it somehow. The big deal with APIs is they bypass nearly all of that. So now you have this pipeline from outside the network that was built to deliver the crown jewels, data. Either by design or by a vulnerability that's present, you can use that API to ex-filtrate the data, or use that API as the way to bypass the firewall, the external defenses, and get into the network. - Large part of internet traffic. I think here it was quoted 83% or something. - Yeah, 83% of all web traffic is API related. - You've got a free resource, free course coming up, is that right? - Yeah, I've developed the APIsec Certified Expert course, which is gonna be freely available to anyone that wants to learn hacking APIs. - If you want to take a free course from Corey, learn this stuff, use the link below. Corey, does that include a certification? Does it include labs? Could you give us a bit more detail about the course that you've created? - Yeah, so the course itself is essentially a lab that will guide you through hacking the various vulnerabilities that are out there for web APIs. All the coursework is free, and there's video companion guide that goes along with it. And then at the end of the course, we'll have a certification exam that you can take to become certified. - Is it a companion with this book? So do they go hand in hand or can I take them independently? - You can take 'em independently. They can stand alone from each other. Of course, the book will enhance your experience with the course, but they're completely independent of each other. - Do I need to have any prerequisite knowledge to take the course? - So the APIsec Certified Expert does have some prerequisites that would be required, but I am developing a second course to go along with it that can get you up to speed on that. - Is that to basically certify that you know how to hack APIs, is that right? - Yeah, it'll be a hands on certification, where you'll actually have to hack in to a lab and present flags that you've been able to exploit certain aspects of the API. - So similar to OSCP or something? - Similar. - Sort of when is that certification gonna be available? - The APIsec Certified Expert course will be available in August, and the certification is to be announced at this point, but hopefully by the end of this year. - That's brilliant, so you heard it here first, folks, as they say, getting back to the book, you've got an interesting story. Why did you decide to write this? - Back in 2019, I was working as a pentest consultant with Moss Adams, and I was mainly doing web application pentest and network pentest. There, they were like, \"Oh, you're the web app pentest guy. \"So we're getting a lot of these requests in \"for API pentests.\" The first thing I did is I went an Amazon, typed in, \"Hacking APIs\", there were no books available. My mind was blown. The very first time in my career when I've looked up a topic that's very important, and there were no resources. Around that same time, December, 2019, which is when I started writing it, the OWASP API Security Top 10 was just released. I had that as a starting point. I found whatever vulnerable machines that I could find that were API related, and then I started taking notes. And I got to about 150 pages of notes, when I thought it through and decided, you know what, this is halfway to being a book. So why not reach out to a couple publishers and see what they think. - That's how you got hold of No Starch and set this up, right? - Yeah, originally I had sent the book idea over to Wiley and No Starch. Both were interested, but it was in a very different way. Bill Pollock, president over there at No Starch, had started emailing me question, after question, after question for about three weeks. It was a great exercise to make sure is this going to be a topic that lasts or is this going to be obsolete as soon as it's printed? I definitely wanted to write it in a way that it would last, and I think it's done that, but I had to convince him first of all. Meanwhile, over at Wiley, it more or less sat on someone's desk for a few weeks, and then they were like, \"Hey, this is a good idea. \"here's an offer.\" And so after all the questions with No Starch, I said, \"Hey, Wiley sent an offer over. \"So do we wanna keep going through this exercise \"or do we wanna move forward with it?\" And one of the things I actually did, is I took my whole library, I laid it out on my floor and I counted the number of Wiley books and number of No Starch books. And it was 10 Wiley to 11 No Starch. That wasn't the ultimate deciding factor, but seeing 'em laid out and how much I had enjoyed some of the other No Starch books drew me into ultimately deciding to go with the No Starch team, which one of the best decisions I've ever made. - I think you were saying that there was something that really kicked this off for you as well, because there was some event that where data was breached or something, is that right? Is it the US Postal Service or something? - Yeah, that's right, the USPS informed visibility data leak. What had happened with that that was really interesting, a month before the leak is published on Krebs, the API and web application were tested by the USPS postmaster general. They published their findings, it's available online, you can still go and check it out. One of the things with API security at that time, there weren't resources out there. So there wasn't the OWASP API Security Top 10 available. So these testers that go in, and they treat it like any other web application vulnerability assessment, web application pentest, and they find a few maybe low risk, medium risk items. They don't happen to mention API in the entire report, but they do go over their tools in the appendices. HP WebInspect was used, Nessus Professional, Scanner was used. You can go and attempt to scan one of the deliberately vulnerable APIs out there, and the thing that'll happen is you'll come back and get results that are false negatives. All the scans will just say nothing is wrong. And the issues that they do find out are security mis-configurations. So they'll say that clickjacking may be present, but it's not going to capture the other significant vulnerabilities. So with the USPS informed visibility API, if a tester had used it as it was designed, they could have made requests. Something like if you made a request to an apartment building, you could use the address as one of the fields that would give you back information. And it would give you back the name, address, phone number, shipping information for everyone in that apartment complex. That led to this huge data leak that affected millions of people. - Yeah, so basically someone was able to access other people's records when they shouldn't have, and was able to access millions of records, right? - That's right. - You mentioned OWASP Top 10. Can you explain sort of what that is? - In chapter three in my book, I do go over the OWAS API Security Top 10. It was published in December, 2019. I believe that new updates are gonna be applied this year as well. That covers the gambit of vulnerabilities that affect web APIs. BOLA, broken object level authorization, is at the top of the list because it affects many of the APIs that are out there. It's either very difficult to defend against, or it's just overlooked pretty often. Oh, it could be a trust issue too. So you're trusting your authenticated users more than you should. And so the check that's missing is that user A can only access user A's data. And a quick check that you can do is to go into an API, capture a lot of the requests, and see which ones pertain to the user account that you have. And then you go in with a second account as user B, you go in and see if you can access user A's data. And at that point, if you are able to then a BOLA, vulnerability would be present. - I just wanna step back a bit. We talking mainly about REST APIs. So I'll do a GET for a resource, and let's say it would be user one, but now I can suddenly get user two or user fives data. Is that right? - Yeah, that's right. When I'm going to test for BOLA specifically, I'm looking for three things. One; I'm looking for the requests that would get me the user data of another user. So those could be GET requests, they often are, but I wouldn't limit it to that, there could be a post request. There could be other query parameters in the GET request that specify the resource. The second thing I'm looking for is how an API provider uniquely identifies resources. So it could be something simple, one, two, three, ABC, but it could be much more complex than that. You can see some tokens that are used, or some other complicated mechanism that has a lot of characters, it could be really long. And just because something simple is in place, just because it is user David one, and that's something with your user profile. That doesn't mean that there's a vulnerability present necessarily, that just means it's easily identifiable. The third thing that you're looking for is that the provider is vulnerable to this attack. And so not only can I find the resource IDs, I can find the requests that I need to make, and then I can successfully make the request for other users' data. - Broken authentication is the second on the top 10, right? - That's right, they do it just a little better. (chuckles) (David laughs) Broken authentication is a catchall for any authentication related vulnerability on a REST API. So that could be... The way I separated out in the book would be classic authentication attacks. So if there's a weak password policy in place, if there's no authentication in place when there should be, or if you're able to easily brute force access to a user's account. Also in that category would be leaked credentials. So if you're able to find an exposed API key or something like that. - And that happens a lot, doesn't it? Developers put it on GitHub. - Yeah, that's right. And so if you were to use some GET dorking techniques, you can go on GitHub, do a quick search for leaked API keys or anything like that. And you'll see there are hundreds of thousands of incidents, and you can click through a couple of those, and you'll see that the API keys sitting there exposed and never ends up getting updated. - The third one on that list is excessive data exposure. Is that where I'm querying for instance, for your name, but then the API gives me a whole bunch of extra information, is that right? - That's right, so excessive data exposure takes place when an API provider sends back a full data object. So if I were to request your name, and they had associated other things with that resource, then the API provider would just send all of that over. Maybe you were just looking for username, address, email, something simpler, but you get back this huge response that contains a lot of extra information. Where excessive data exposure becomes more of an issue is when the information that's sent back to you is also an information disclosure. And so you find that not only are you getting your user information, but you're also getting the administrator's information. - Oh wow, yeah. - And maybe they're associated with the creation of the account or something, so you'll get back the admin's username, email, role level, multifactor status, that sort of information that can be used in more complex attacks. - Is there one more that you wanna highlight that you find very often. - Yeah, especially with the great resignation of the last year, and 60% of developers wanting to find new career paths. The other one that I would wanna highlight is pretty low on the list, which is improper assets management. This is all about API aversion control, and so if you have a developer or a set of developers on the API providers team that are managing a certain version, and they're no longer there to support that version, and maybe the other developers move on with the API, you'll find that a version one of the API is exposed when they're now on version three. Between those versions, things like BOLA, and maybe authentication requirements or maybe rate limiting was applied to the API in different way. So maybe those things have been fixed in the other versions, but sure enough, a developer or a group of developers left and they supported V1 of the API, and now that is exposed with all of those vulnerabilities because it's improperly managed. - Did you say 60% of developers are thinking of leaving? And that causes massive problems. - The report I had read was 60% were considering new career paths, so I don't know how many followed through, but if you're relying on individual developers or on tribal knowledge of a certain aspect of your API, and they go onto a new career, then you're left with an API that may not be supported. I think if it's similar to an unsupported software vulnerability. And so if a portion of your network was old legacy systems that needed to be updated, but you had a certain person that was responsible for that. Now they're gone, now all of those systems are left vulnerable, un-updated, un-patched for however many years until that's caught. - The more I read your book, and the more I listen to you, the more scary it is because it seems like the world is running on APIs. It's like this massive piece that people have not really tested properly, or forgotten about, or whatever. Is that kind of right? - Yeah, that's right. I mean, as someone that was asking similar questions a couple years ago, before the book was created, they seemed to be prevalent, they seemed to be taking up most of web traffic, right? So it's a scary thing that a couple years ago, someone in my role didn't know the tools and techniques that were used. And going to those conferences and asking other professionals, and they didn't know they had a specific person. Those resources weren't available in a book form. That was definitely one of the things that drove me. I wanted to arm all the other testers out there. This is one of the top attack vectors for adversaries to get into a network to steal data. We need to know how to test those out thoroughly, and to make sure that we're helping organizations close those gaps. - Who's the book aimed at, and what's the prerequisite knowledge? - \"Hacking APIs\" is aimed at anyone that wants to get into penetration testing. And so I wrote it from the ground up, you can really go from zero to hero with this. If you wanted to have APIs be the first thing you ever hack I wrote this book in a way that will help you through that. The prerequisite knowledge for it, very minimal. I have friends that are going through it, they're teachers and correctional officer, and they have no IT background at all. And they're making their way through the book, \"Hacking APIs\", and so it's pretty awesome to see. I do cover a lot of the basics upfront. I sort of have it go over a spectrum, from just getting your hands on the keyboard, interacting with basic APIs, having an understanding of what they do and how they work. Then getting into, okay, here's how you analyze different endpoints, here's how you look for those weaknesses and here's how you attack them. And at the end of all the attack chapters, I have labs that go along with it. That the thing that was the most important to me is it's one thing to have a book filled with a bunch of words that people can look through, take notes and so on, but to get their hands on the keyboard was really important to me, and making sure that they're running the commands, going through it, and feeling the success of what it's like to find an API vulnerability and exploit it. - In your book, you mention TryHackMe. You mentioned Hack The Box, and then you mentioned spinning up VMs, what do I need to set up a lab? Is it just register on TryHackMe or Hack The Box? - If you have a computer that can support a hypervisor like VMware, you can download Kali Linux. As long as you're able to install those and go through that process, then you should be good to go from there. The downloading and installing of vulnerable applications is the next piece, which you could even do that on the local host if you wanted to. The other platforms that I mentioned, Hack The Box and TryHackMe, I think those just make that part of the process one step easier. The way I intended it was for the reader to set up their own hacking lab. And again, just getting their hands on the keyboard from the beginning. Those other services do make it easy, where, okay, you've learned from the side by side labs that I have in the book, and now you want to apply those skills elsewhere with maybe a bit less handholding or assistance. The reason I say that is because I created these labs out of a response to my experience with the OSCP, which the whole trying harder philosophy and everything. It really gives you a taste of the hacker mindset, including isolation and working things through on your own. And I wanted this to be a step beyond that, so it's not try harder, it's, here's how you do it, and here's how we can work through it together. So I wrote the labs to be more like, \"I'm right there with you, \"we're gonna hack this thing together.\" - I could run Coley on my laptop, download some tools, install them, and I'm ready to go, is that right? - That's right. - What are some of the other tools that you recommend? I've got a list here, but one would be Postman. Can you talk about some of the tools and what they actually do. - For me, Postman is essential. I've said hacking APIs is like a love letter to Postman, and PortSwigger with Burp Suite, because those two tools make hacking APIs a lot more approachable. Postman is a web browser designed specifically for interacting with APIs. If an API provider has documented and defined their API, then you'll be able to import the entire API, all of their requests that are there, and then interact with those. If an API is not documented, or maybe you're working with one where the documentation is behind a wall that you don't have access to, something like a private API or a partner API. Maybe you have to reverse engineer that. And so Postman gives you the ability to manually build your own requests, adding parameters, authentication, and all of that. They also have proxy built into it so you can capture the request. You can just use a regular web browser, something like FoxProxy, and send that traffic through Postman. And then you can organize your requests from there. There's also this really cool tool called mitmproxy2swagger. You can use that tool in a very similar way. So you proxy all of your requests, you build out a file, and then this tool will turn that file into a swagger file, which then can be easily imported into Burp Suite. And it looks like, if you've ever seen a swagger file before, it makes interacting and understanding an API a lot easier. Essentially introduces a graphical aspect, where APIs are not graphical. - Do you need to pay for any of these tools? I mean, the big one guys will be perhaps be thinking about is Burp Suite. Do you have to get the pro version or can you get away with the community edition? - So I did write the book in a way where I wanted to present all the free tools that are available. So that way anyone can pick up the book and begin hacking APIs. That being said, as soon as you can, with your first bounty, get Burp Suite Professional, 'cause that's gonna help you so much. Especially getting access to some of the extensions that are out there too. - Okay, so Burp Suite, Postman or tools, FoxyProxy you've mentioned, Coley, another tool I've seen you've mentioned in the book is Kiterunner, can you explain what that's about? - Kiterunner is this amazing tool that was built by Assetnote down in Australia. And they designed not just the tool, but they designed the word list that are used for the tool. And so Kiterunner essentially is a tool that can be used to scan for API endpoints. And what makes it unique, compared to something like Gobuster or FFUF, is that it was built with APIs in mind. And so something like Gobuster may perform a directory brute force, where it's looking for, well, we'll say there's an end point that's APIV2/user. And then you can have a resource ID beyond that. So something like one. A tool like Gobuster is gonna search for API, and then it's gonna get back a response. So if that response is a 400, maybe it's going to ignore that response altogether. And maybe it goes to the next one, APIV1, V2, and it's still getting the same response. It could end there altogether, but a tool like Kiterunner is built with that URL structure in mind. And so it's going to search for APIV1 user one, APIV2 user one, and maybe it'll also provide a bunch of gibberish for a resource ID. The way APIs are typically designed, they'll have a unique response for when there's a bad idea that's used. So like, \"Resource not found\", something else out there. And that's gonna stick out like a sore thumb and say, \"Hey, this URL exists.\" The other really cool aspect of Kiterunner were the wordlists that were designed. And so essentially the Assetnote team scan the entire internet for all the API endpoints that are out there, to build this wordlist that's freely available on their website. - You've got a tool, I think it's Wfuzz. Can you explain what fuzzing is? And why do we care and what this tool's about? - Yeah, so I wanted to present another free tool because Burp Suite Community Edition does throttle their intruder requests. So you get about maybe a hundred good requests before it starts slowing down. Wfuzz performs fuzzing, which is sending over input to an application. And Wfuzz does it really quickly. And so you can take a request. Anywhere in that request you want, you can add essentially an attack designation. And with that, I think it's just FUZZ all capitalized, and you can provide a word list. That word list can have whatever gibberish, or directory list or username list that you want to provide. And Wfuzz will quickly send repeated requests over, and have the unique responses stand out to you. So it's just another way to send over input and see how the API reacts to it, which could lead you to finding vulnerabilities, and later exploitation. - What I really love about the book though, is that you've, like you've said earlier, you're not just teaching us the theory of this, you're actually showing us how to do it. Are there any other tools that you want to highlight? - Another tool that I do highlight in the discovery section is OWASP Amass, really great tool for performing that initial reconnaissance. And the other cool thing I liked about that tool, is to make it work well you have to plug in a bunch of APIs keys into it. So it's sort of a win-win there. One; you get to perform great reconnaissance. And two; you get to build the tool into this better thing by creating free accounts and plugging in API keys. - You're one step ahead, 'cause my next question was, okay, how do I find the APIs? And you've got a whole section on reconnaissance, is that right? - I have a whole section, that it's called Discovering APIs. And it goes over the passive and active techniques to finding the APIs. A lot of APIs were meant to be found. Filter your web traffic through a proxy and view the requests that are made. You can see the API calls that are going on in the background of just loading a simple page. So that can be step one in finding an API, is just using a web application, proxying the traffic and seeing what's going on there. The public APIs that are meant to be found are often advertised, and so there's a big, well, maybe not big, but there's a small API button at the bottom of the page that will guide you to the documentation and the instructions for how to use the API. So those were meant for public consumption. In all other cases, maybe it's a partner API or a private API, maybe it wasn't meant to be found. Maybe it was just meant to facilitate some of the requests that go on in the background of the web application. And so in those instances, you can use the dev tools and you can see that API requests are going on in the background. You can use Burp Suite or another mitm-proxy tool to see the requests that are being made, and filter out the API requests. - What about Nmap, can we use Nmap to find APIs and test them? - Yeah, on the active side of things, you can use a tool like Nmap to just get a basic understanding of your target. And so you can enumerate the ports that are open, services that are running, maybe the HTTP responses that you're getting from some of those quickly. And that can guide you through, and maybe point you in the right direction of an API. But once you've discovered something with Nmap, then the great next step is to test it out. So use a web browser and go and check out those different URLs that you discovered. And of course, proxy your traffic so you can see all of the requests that are going on in the background. Because it may not be obvious that an API call is being made in the background while you're browsing around from page to page. Another part of your active reconnaissance is going to be scanning for endpoints. That's where your tools like Wfuzz, Kiterunner, and any sort of directory brute force is gonna take place. - I like to give people who are new to the industry the hot new trends, and an easy way to make a mark for themselves. If I'm new to the industry. I mean, I'm assuming it's gonna be yes, but would you recommend API hacking as a good place to start? - 100%, APIs are a great way to start, because one, there are not a ton of people doing it and the need is great. A lot of these API providers go untested for a while until an attacker comes along. I think APIs can be very approachable. Even though it seems like this big, new, scary technology. Once you get into it, once you start making API requests, that gets you a foot in the door. So you know how an API provider provider responds, you know what to expect from that, you know the sort of parameters that are expected in a request. Just those basic things. If you just go and interact with an API, then you can learn a lot from that to get you started. And then you get into the exploits. We're not talking about creating these zero day exploits that require all this work, and research and everything. We're talking about using an API as it was designed with your user account, and then attempting to access another user's account or resources. And so these things are not rocket science, but there is some basic understanding that goes into it before you can get going. And so once you have that, APIs are a great target. Like we said before, APIs are one of the leading attack vectors. And the adversaries are already doing it, and so we need to catch up as the testers. And I think it's a great new topic for someone that just wants to get in their foot in the door with hacking. It's a great first attack vector to focus on. - Number one, there's huge demand because there's not enough people out there doing it. Number two, this is growing like crazy. Number three, it sounds like the barriers to entry are not that high. As in you don't need to spend thousands and thousands of dollars buying some fancy equipment. Is that right? - That's right, yeah. As long as you have basic rig that you can work off of to attack from, then you should be good to go from there. All the tools in the book are free and effective at testing for these vulnerabilities. - What's the difference between REST APIs and GraphQL? - REST is representational state transfer. And so when you're interacting with those sorts of APIs, you're making HTTP requests to suit certain URLs, to get resources back. And it's just a standardized way of creating, reading, updating and deleting data. GraphQL is a query language. So you can think of it more like SQL, except for APIs. So if I were making a request to a REST endpoint, I would use maybe GET APIV1 user David, and then I would get back all the information about David. Using GraphQL, you can specify exactly the data that you're looking for. So I can have a query field just for username David, and I just want email address. And so I just specify email, and that gives me back that exact bit of data, versus the whole block. - Before studying your book, I was always thinking about REST is what I need to study. But are you saying that GraphQL is like an up and coming thing that I should also look at? - REST is definitely the most widely used web API that's out there. GraphQL though is exploding in adoption, and so lots of developers see this new technology that can be used to specify exactly the data that you're looking for, and they're adopting it and using it. So it definitely is something that will require additional attention. Right now, REST is already out there, it's already vulnerable, and it's already been adopted and continuing to be adopted. So it definitely needs the focus, but GraphQL is right there behind it. So once you've finished figuring out how to work with web APIs like REST, then definitely move on to GraphQL to build out your repertoire of tools and techniques. - You've covered some of it in your book, is that right? How do I learn more about it? - Yeah, so I have one chapter at the end of my book all about hacking GraphQL. And the lab for that is the Damn Vulnerable GraphQL Application. And the cool thing that happened was after I had announced the release of hacking APIs, I connected with the developers of Damn Vulnerable GraphQL, and that's Nick Alecks and Dolev Farhi. And I commented to them, I said, \"I'm leaving the successor book to you guys on GraphQL.\" And three days before I made that comment, they'd actually signed on with No Starch Press to write \"Black Hat GraphQL\". And they asked me to be a technical editor on the book. We just finished that process, and now \"Black Hat GraphQL\" is available for pre-order. So the next great resource to get into after \"Hacking APIs\", definitely \"Black Hat GraphQL\", you'll learn a ton. There are a lot of unique vulnerabilities to that technology. - If I read your book, it's enough knowledge to get me started. I don't have to go and take a university course to learn about XML or something. - All of that will be covered in the book to help you from the start, from my own background though, I'm not a developer, I'm not a programmer, and I only know enough to be able to read through exploits and understand what's going on. But I'm not going to be the one that's out there creating the next great app. I'm more of a breaker than a builder. - That's what's fantastic about hacking or pentesting, is that you're not trying to build Facebook, or Google, or whatever, but with enough knowledge you can poke at it and find problems. - Yeah, that's right. - So Corey, tell me, certifications, are they important in cybersecurity, do you have any, give us your take on certifications. - Yeah, so I have a handful of certifications, and to list them all out might be annoying. So I hate to say, I have the CompTIA suite. I have OSCP, I have the Certified Ethical Hacker, CISSP, and the is ISACA suite and CCSO. See, it already got annoying just saying all that. So obviously, as someone that's partook in them, I would say, yeah, they do hold a lot of value. If you're trying to break into cybersecurity, they are one of the greatest helpers to do that. The CEH may be controversial. - Slammed. - Getting the Certified Ethical Hacker was great for getting that foundational information about the hacking process. So I really liked the content there, but after I had obtained the CEH, I didn't feel like a hacker and I probably couldn't hack anything if I was forced to. So I did want to pursue something after that, the OCP specifically, that would give me more the hands on experience. But where the CEH was great is I don't know how many HR managers are out there, but they do like the CEH. And when they see that, they're questions and you can talk about that. I would just say, don't go in the door saying, \"I'm an expert pentester because I have the CEH.\" You have some knowledge and you can develop that into something more, and certs help a lot with that. So getting your foot in the door for interviews, certs provide a lot of value there. And as long as you're going through, you're studying the material, you're getting your hands on the keyboard, you're testing out labs, you're building that experience. Then if the cert is the thing that drives you to do that, then that's a great way to build that experience. - How long you been hacking for, what did you do before you were a hacker? - I grew up with computers, so I've always had that experience. I was hacked myself in late middle school. And the cool part about that experience was I was so blown away that it had happened to me, that when, I think it was Net Bust or something like that, but when they had hacked me, they popped up a communication window where we could text back and forth. And so I'd messaged, like, \"Please show me your ways, \"please show me how you've done this.\" And then they gave me the Net Bust software and told me how to use it. And that just led into, well, not necessarily criminal activity, but friendly pranks to friends and colleagues. So that's where I first had that experience, but then professionally, I had my own IT services business, called Consologic. So I opened that brick and mortar store, it was about 12 years ago, 13 years ago. And there, I offered everything under the sun that I could sell as a service. I repaired video game consoles, I set up small business networks, I did computer repair and things like virus removal. And from there, I had the opportunity to become an IT manager. And I moved over to a smaller business that was an employee benefit provider. And there, I had the opportunity to help from the IT side and then move into cybersecurity, because they were constantly being audited by large organizations that they worked with in healthcare. And those organizations would audit them almost monthly, or every other month we'd have a new audit. And so it was my job to take that audit, answer the questions, work with the auditors, implement the security controls, really a one man band there. And then eventually that led to growing at a team and moving into being the cyber security manager. From there, I wanted to implement penetration testing so I started a red team, blue team exercise with the smaller team that we had there. And we'd attempt to break into the organization that we were at, and then the other team would try and defend against it. - What was your first certification hacking, slash pentesting cert? - As far as cyber certs go, I started out with the Security +, CEH, CISSP. And then after that experience with the CEH, I really wanted to get more hands on experience, and actually feel like a hacker. And so OSCP was that experience. And so I took the OSCP for, I believe I worked at it for a year and a half before I earned the certification. Failing a few times in between. - I think that's what's great about what you've done with a book, and what you've done with this new cert. It sounds like you're not putting the barriers so high that people are scared away. - Yeah, during my OSCP, after the first time at failing the test, I was on the lookout for what are other people doing that I'm missing out on? And really, the only thing I had to go off of at that time was my experience from previous certs. So we're talking CEH, and how much that helped me with the OSCP. The other resource was, maybe I think I was reading \"Penetration Testing\" by Georgia Weidman at the time, and the OSCP course material. Which, funny enough, didn't feel like enough to earn the certification. So I kept a lookout for other people that were passing it. And I would see some maybe experienced penetration testers. I'd be like, \"Oh, that's the easiest certification ever. \"I can't believe they even have it\", all this stuff. And so I reached out to them. Normally your pride is just hurt and that's the end of it. You're just like, \"Ignore the comment.\" But I'm like, \"Again, teach me your ways. \"What am I doing wrong, how is it so easy for you?\" And often time, the answer was like, \"Oh, well, I have 10 years of experience being a pentester.\" Okay, well, what did you do in that time to help get you here, so that I could get on that level? The number one thing that helped me through that was watching IppSec on YouTube. Before ippsec.rocks existed, it's a search engine that you can use to go through the videos and find specific topics. I had created that in Google Drive, I watched every single video, I annotated every tool and technique that I could find, and then I worked my way through those labs by actually participating and following along. Even if I didn't know what I was doing, I was still running the commands and building up that understanding. - Rather than everyone just going down that one route, correct me if I'm wrong, but it would be like Security +, CEH maybe, and then OSCP. There's this alternate path, where the barrier to entry is not so high, but the demand is very high. - Yeah, exactly, I wanted to create something that could be approachable to everyone. There a clear and present problem that we don't have enough people doing, and we need a lot more quickly. And this is just one method of doing that. Writing the book was one, creating this course is another one to help secure the APIs of the world. - Corey, I'm new, give me the path to become an API hacker like you. - Reading through \"Hacking APIs\" and participating in the labs is gonna be a great first step for that. Learning more about web apps in general. So the Web Security Academy put on by PortSwigger is the next great free resource. Looking out for those other free labs that involve APIs, so checking out TryHackMe and Hack The Box for the free labs that are API related. Vickie Li's book, \"Bug Bounty Bootcamp\", great resource for getting into bug bounties and learning out some web hacking techniques. And then the APIsec Certified Expert course is another great resource. Check out YouTube channels, InsiderPhD, she puts out awesome content for API hacking. - We'll link those resources below. Corey, do I need 10 years of experience to become an API hacker? - Absolutely not, I think you could become an API hacker very quickly. You can start out in under a month. If you got your hands on the book or the APIsec Certified Expert course, you can quickly and easily become an API hacker. There are very, very low barriers to entry. - You need 10 years of experience, 20 years of experience to even have a seat at the table, but there's this huge demand that APIs get secured and get tested. So I love that I don't need all this experience to get started. And it's a hot new trend, there's a lot of jobs, is that right, or a lot of demand for this. - There's definitely a lot of demand for it. If 80% of all web traffic is API related, it almost feels like why are we talking about network pentesting at all? But that's important too, but there definitely is a ton of API traffic out there. And most of it is gonna be insecure in some way. - If people can't afford even the book, they can take your course for free, is that right? - That's right, the APIsec Certified Expert course is completely free. And so you can get access to a lot of that information that's gonna guide you through similar tools and techniques that are presented in the book. The book dives into them in more depth, but the course will help you get your hands on the keyboard and show you the things to look for right away. - There's this huge demand for people in the industry, but we put these barriers to stop people coming into the industry, which is like, why? And I love what you've done, that you're saying, If you just get this book, you take the free course within a month, two month, three months, perhaps you can do this. - Yeah, I said before that I'm more of a breaker than a builder, and that comes to those barriers as well. I'm a breaker there too. I don't think with the need that we have in cybersecurity globally, why, why put up these barriers? I don't see the point in that. I don't see the point in excluding. You're a script kitty for doing this, or you're not good enough because of this. We shouldn't be excluding, we should be inviting. We should be helping, we should be mentoring. The book and the course are the way that I saw that I could help tear down those barriers and get people into the industry. - You said you were a breaker, that you breaking down these barriers to entry, that it's open for anyone, anywhere. They don't have to be in the US, they don't have to be rich. Thank you so much for writing the book. Thank you so much for creating a free course and making this available to people around the world. - I saw the need for it, and I love helping out and raising other people up. And so I'm really glad to do it. - How can people contact you, is it Twitter? What's the best place to get hold of you? - Anyone can connect with me on LinkedIn, happy to connect with you there. I typically don't connect with sketchy profiles, but you're welcome to follow me if you'd like. And then on Twitter, I'm @hAPI_hacker. - That's brilliant, we'll put all those links below. Just wanna say thanks again so much for the interview. Thanks so much for sharing the knowledge, and not keeping it to yourself. - Thanks so much for having me on. (pop instrumental music)",
    "transcript_keywords": [
        "API",
        "APIs",
        "Hacking APIs",
        "API Security Top",
        "book",
        "OWASP API Security",
        "API Security",
        "API requests",
        "API provider",
        "API hacker",
        "web APIs",
        "API related",
        "REST APIs",
        "API hacking",
        "Hacking",
        "tool",
        "requests",
        "Yeah",
        "web",
        "OWASP API"
    ],
    "transcript_entities": [
        [
            "YouTube",
            "GPE"
        ],
        [
            "a ton",
            "QUANTITY"
        ],
        [
            "every other month",
            "DATE"
        ],
        [
            "Australia",
            "GPE"
        ],
        [
            "three",
            "CARDINAL"
        ],
        [
            "Vickie Li's",
            "PERSON"
        ],
        [
            "No Starch Press",
            "ORG"
        ],
        [
            "20 years",
            "DATE"
        ],
        [
            "a year and a half",
            "DATE"
        ],
        [
            "three months",
            "DATE"
        ],
        [
            "Burp Suite",
            "ORG"
        ],
        [
            "two",
            "CARDINAL"
        ],
        [
            "Hack The Box and TryHackMe",
            "PERSON"
        ],
        [
            "IppSec",
            "PRODUCT"
        ],
        [
            "second",
            "ORDINAL"
        ],
        [
            "APIV2",
            "ORG"
        ],
        [
            "under a month",
            "DATE"
        ],
        [
            "YouTube",
            "ORG"
        ],
        [
            "Kiterunner",
            "ORG"
        ],
        [
            "Google",
            "ORG"
        ],
        [
            "Moss Adams",
            "PERSON"
        ],
        [
            "the end of this year",
            "DATE"
        ],
        [
            "PortSwigger",
            "PRODUCT"
        ],
        [
            "HTTP",
            "ORG"
        ],
        [
            "December, 2019",
            "DATE"
        ],
        [
            "80%",
            "PERCENT"
        ],
        [
            "un",
            "ORG"
        ],
        [
            "Google Drive",
            "LOC"
        ],
        [
            "Wiley",
            "ORG"
        ],
        [
            "the Certified Ethical Hacker",
            "LAW"
        ],
        [
            "Penetration Testing",
            "WORK_OF_ART"
        ],
        [
            "about three weeks",
            "DATE"
        ],
        [
            "13 years ago",
            "DATE"
        ],
        [
            "David Bombal",
            "PERSON"
        ],
        [
            "APIV1",
            "PERSON"
        ],
        [
            "CompTIA",
            "ORG"
        ],
        [
            "Dolev Farhi",
            "PERSON"
        ],
        [
            "Bug Bounty Bootcamp",
            "WORK_OF_ART"
        ],
        [
            "Nessus Professional",
            "ORG"
        ],
        [
            "OSCP",
            "ORG"
        ],
        [
            "Facebook",
            "ORG"
        ],
        [
            "TryHackMe",
            "PERSON"
        ],
        [
            "GraphQL",
            "ORG"
        ],
        [
            "HP WebInspect",
            "PERSON"
        ],
        [
            "Hack The Box",
            "WORK_OF_ART"
        ],
        [
            "API",
            "ORG"
        ],
        [
            "millions",
            "CARDINAL"
        ],
        [
            "ISACA",
            "ORG"
        ],
        [
            "August",
            "DATE"
        ],
        [
            "Net Bust",
            "PERSON"
        ],
        [
            "10 years",
            "DATE"
        ],
        [
            "Black Hat",
            "WORK_OF_ART"
        ],
        [
            "CISSP",
            "ORG"
        ],
        [
            "chapter three",
            "LAW"
        ],
        [
            "Nick Alecks",
            "PERSON"
        ],
        [
            "a couple years ago",
            "DATE"
        ],
        [
            "about 12 years ago",
            "DATE"
        ],
        [
            "almost monthly",
            "DATE"
        ],
        [
            "one",
            "CARDINAL"
        ],
        [
            "BOLA",
            "ORG"
        ],
        [
            "Bill Pollock",
            "PERSON"
        ],
        [
            "11",
            "CARDINAL"
        ],
        [
            "Kali Linux",
            "PERSON"
        ],
        [
            "the Web Security Academy",
            "ORG"
        ],
        [
            "OCP",
            "ORG"
        ],
        [
            "first",
            "ORDINAL"
        ],
        [
            "2019",
            "DATE"
        ],
        [
            "Coley",
            "PERSON"
        ],
        [
            "CEH",
            "ORG"
        ],
        [
            "FoxyProxy",
            "ORG"
        ],
        [
            "Consologic",
            "ORG"
        ],
        [
            "USPS",
            "ORG"
        ],
        [
            "Scanner",
            "ORG"
        ],
        [
            "the last year",
            "DATE"
        ],
        [
            "Amazon",
            "ORG"
        ],
        [
            "Burp Suite Community Edition",
            "ORG"
        ],
        [
            "hundreds of thousands",
            "CARDINAL"
        ],
        [
            "a month",
            "DATE"
        ],
        [
            "APIV1",
            "ORG"
        ],
        [
            "the US Postal Service",
            "ORG"
        ],
        [
            "Burp Suite Professional",
            "PRODUCT"
        ],
        [
            "this year",
            "DATE"
        ],
        [
            "ABC",
            "ORG"
        ],
        [
            "David",
            "PERSON"
        ],
        [
            "SQL",
            "ORG"
        ],
        [
            "Nmap",
            "PRODUCT"
        ],
        [
            "VMware",
            "ORG"
        ],
        [
            "Postman",
            "PERSON"
        ],
        [
            "Corey",
            "PERSON"
        ],
        [
            "a few weeks",
            "DATE"
        ],
        [
            "LinkedIn",
            "PERSON"
        ],
        [
            "Gobuster",
            "PERSON"
        ],
        [
            "Net Bust",
            "ORG"
        ],
        [
            "thousands and thousands of dollars",
            "CARDINAL"
        ],
        [
            "two month",
            "DATE"
        ],
        [
            "83%",
            "PERCENT"
        ],
        [
            "US",
            "GPE"
        ],
        [
            "10",
            "CARDINAL"
        ],
        [
            "APIsec",
            "ORG"
        ],
        [
            "FoxProxy",
            "ORG"
        ],
        [
            "Nmap",
            "ORG"
        ],
        [
            "OWASP",
            "ORG"
        ],
        [
            "Wfuzz",
            "ORG"
        ],
        [
            "TryHackMe",
            "GPE"
        ],
        [
            "third",
            "ORDINAL"
        ],
        [
            "One",
            "CARDINAL"
        ],
        [
            "Krebs",
            "PERSON"
        ],
        [
            "Wiley",
            "PERSON"
        ],
        [
            "zero",
            "CARDINAL"
        ],
        [
            "three days",
            "DATE"
        ],
        [
            "100%",
            "PERCENT"
        ],
        [
            "60%",
            "PERCENT"
        ],
        [
            "Hack The Box",
            "PERSON"
        ],
        [
            "400",
            "CARDINAL"
        ],
        [
            "Assetnote",
            "ORG"
        ],
        [
            "Georgia Weidman",
            "PERSON"
        ],
        [
            "GitHub",
            "ORG"
        ],
        [
            "the Death Star",
            "ORG"
        ],
        [
            "about 150",
            "CARDINAL"
        ],
        [
            "VMs",
            "PRODUCT"
        ],
        [
            "Twitter",
            "ORG"
        ]
    ]
}